REM lookup tables - tested

REM   Create SEGMENT_LK Table
CREATE TABLE SEGMENT_LK (
ID		NUMBER
,CODE		NUMBER
,DESCRIPTION	VARCHAR2(255 BYTE)
,TYPE		VARCHAR2(50 BYTE)
,RIVER_CODE	NUMBER
,UPPER_RIVER_MILE	NUMBER
,LOWER_RIVER_MILE	NUMBER
,RPMA		NUMBER
,CONSTRAINT SEGMENT_PK PRIMARY KEY (ID)
,CONSTRAINT SEGMENT_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN SEGMENT_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN SEGMENT_LK.CODE IS 'Segment Code';
COMMENT ON COLUMN SEGMENT_LK.DESCRIPTION IS 'Description of the Segment';
COMMENT ON COLUMN SEGMENT_LK.TYPE IS 'Type of the Segment';
COMMENT ON COLUMN SEGMENT_LK.RIVER_CODE IS 'Code of the River the segment is on. FK to RIVER_LK.CODE';
COMMENT ON COLUMN SEGMENT_LK.UPPER_RIVER_MILE IS 'Upper River Mile of the Segment';
COMMENT ON COLUMN SEGMENT_LK.LOWER_RIVER_MILE IS 'Lower River Mile of the Segment';
COMMENT ON COLUMN SEGMENT_LK.RPMA IS 'Recovery Program Management Area for data analysis';

COMMENT ON TABLE SEGMENT_LK IS 'Look up table for Segment details.';


REM   Create COBBLE_ORGANIC_EST_LK Table
CREATE TABLE COBBLE_ORGANIC_EST_LK (
ID		NUMBER
,CODE		NUMBER
,DESCRIPTION	VARCHAR2(50 BYTE)
,CONSTRAINT COBBLE_ORGANIC_EST_PK PRIMARY KEY (ID)
,CONSTRAINT COBBLE_ORGANIC_EST_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN COBBLE_ORGANIC_EST_LK.ID IS 'Primary Key';
COMMENT ON COLUMN COBBLE_ORGANIC_EST_LK.CODE IS 'Code of the estimate for cobble organic';
COMMENT ON COLUMN COBBLE_ORGANIC_EST_LK.DESCRIPTION IS 'Description of the estimate';

COMMENT ON TABLE COBBLE_ORGANIC_EST_LK IS 'Contains the values for the cobble organic estimate values';

REM   Create ELASTOMER_COLORS_LK Table
CREATE TABLE ELASTOMER_COLORS_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,COLOR		VARCHAR2(30 BYTE)
,CONSTRAINT ELASTOMER_COLORS_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN ELASTOMER_COLORS_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN ELASTOMER_COLORS_LK.DESCRIPTION IS 'Color Description, contains code';
COMMENT ON COLUMN ELASTOMER_COLORS_LK.COLOR IS 'Color Description';

COMMENT ON TABLE ELASTOMER_COLORS_LK IS 'Look up table of Elastomer Colors, contains color code and description.';

REM   Create ELASTOMER_HVX_LK Table
CREATE TABLE ELASTOMER_HVX_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT ELASTOMER_HVX_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN ELASTOMER_HVX_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN ELASTOMER_HVX_LK.DESCRIPTION IS 'Description of the elastomer';

COMMENT ON TABLE ELASTOMER_HVX_LK IS 'Look up table of Elastomer HVX code and description.';

REM   Create EVAL_LOCATION_LK Table
CREATE TABLE EVAL_LOCATION_LK (
CODE		VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT EVAL_LOCATION_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN EVAL_LOCATION_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN EVAL_LOCATION_LK.DESCRIPTION IS 'Description of the evaluation location';
COMMENT ON COLUMN EVAL_LOCATION_LK.SORT_ORDER IS 'Order to display the selection options in the application';
COMMENT ON COLUMN EVAL_LOCATION_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE EVAL_LOCATION_LK IS 'Look up table for Evaluation Location details.';

REM   Create FD_BAIT_BOX_LK Table
CREATE TABLE FD_BAIT_BOX_LK (
ID		NUMBER
,CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(50 BYTE)
,CONSTRAINT FD_BAIT_BOX_PK PRIMARY KEY (ID)
,CONSTRAINT FD_BAIT_BOX_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN FD_BAIT_BOX_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FD_BAIT_BOX_LK.CODE IS 'Code for bait box type';
COMMENT ON COLUMN FD_BAIT_BOX_LK.DESCRIPTION IS 'Description of the bait box type';

COMMENT ON TABLE FD_BAIT_BOX_LK IS 'Look up table for Bait Box details.';

REM   Create FIELD_OFFICE_LK Table
CREATE TABLE FIELD_OFFICE_LK (
ID		NUMBER
,CODE		VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(255 BYTE)
,STATE		VARCHAR2(2 BYTE)
,CONSTRAINT FIELD_OFFICE_PK PRIMARY KEY (ID)
,CONSTRAINT FIELD_OFFICE_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN FIELD_OFFICE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FIELD_OFFICE_LK.CODE IS 'Field Office Code';
COMMENT ON COLUMN FIELD_OFFICE_LK.DESCRIPTION IS 'Description of the field office';
COMMENT ON COLUMN FIELD_OFFICE_LK.STATE IS 'State of the field office';

COMMENT ON TABLE FIELD_OFFICE_LK IS 'Look up table for Field Office and code.';


REM   Create FISH_CODE_LK Table
CREATE TABLE FISH_CODE_LK (
ID			NUMBER
,COMMON_NAME		VARCHAR2(255 BYTE)
,SCIENTIFIC_NAME	VARCHAR2(255 BYTE)
,ALPHA_CODE		VARCHAR2(30 BYTE)
,NUMERIC_CODE		NUMBER
,NUMERIC_CODE_TXT	VARCHAR2(30 BYTE)
,CONSTRAINT FISH_CODE_PK PRIMARY KEY (ID)
,CONSTRAINT FISH_CODE_ALPHA_CODE_U UNIQUE (ALPHA_CODE)
,CONSTRAINT FISH_CODE_NUMERIC_CODE_U UNIQUE (NUMERIC_CODE)
);
COMMENT ON COLUMN FISH_CODE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FISH_CODE_LK.COMMON_NAME IS 'Common name of the fish';
COMMENT ON COLUMN FISH_CODE_LK.SCIENTIFIC_NAME IS 'Scientific name of the species of fish';
COMMENT ON COLUMN FISH_CODE_LK.ALPHA_CODE IS 'Alpha code of the fish';
COMMENT ON COLUMN FISH_CODE_LK.NUMERIC_CODE IS 'Numeric code of the fish stored as number';
COMMENT ON COLUMN FISH_CODE_LK.NUMERIC_CODE_TXT IS 'Numeric code stored as a string';

COMMENT ON TABLE FISH_CODE_LK IS 'Look up table containing details about fish.';

REM   Create FISH_STRUCTURE_LK Table
CREATE TABLE FISH_STRUCTURE_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT FISH_STRUCTURE_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN FISH_STRUCTURE_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN FISH_STRUCTURE_LK.DESCRIPTION IS 'Description of the fish structure';

COMMENT ON TABLE FISH_STRUCTURE_LK IS 'Look up table for fish structure by code.';

REM   Create FLOY_TAG_PREFIX_CODE_LK Table
CREATE TABLE FLOY_TAG_PREFIX_CODE_LK (
ID		NUMBER
,CODE		VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT FLOY_TAG_PREFIX_CODE_PK PRIMARY KEY (ID)
,CONSTRAINT FLOY_TAG_PREFIX_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN FLOY_TAG_PREFIX_CODE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FLOY_TAG_PREFIX_CODE_LK.CODE IS 'Code of the floy tag prefix';
COMMENT ON COLUMN FLOY_TAG_PREFIX_CODE_LK.DESCRIPTION IS 'Description of the tag prefix';

COMMENT ON TABLE FLOY_TAG_PREFIX_CODE_LK IS 'Look up table for Floy tag prefix details.';

REM   Create FREQUENCY_LK Table
CREATE TABLE FREQUENCY_LK (
ID		NUMBER
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT FREQUENCY_LK_PK PRIMARY KEY (ID)
);
COMMENT ON COLUMN FREQUENCY_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FREQUENCY_LK.DESCRIPTION IS 'Description of the frequency';
COMMENT ON COLUMN FREQUENCY_LK.SORT_ORDER IS 'Sort order used for application display';
COMMENT ON COLUMN FREQUENCY_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE FREQUENCY_LK IS 'Look up table for Frequency details of tracking tag on fish';


REM   Create GEAR_LK Table
CREATE TABLE GEAR_LK (
ID	NUMBER
,CODE	VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT GEAR_PK PRIMARY KEY (ID)
,CONSTRAINT GEAR_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN GEAR_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN GEAR_LK.CODE IS 'Code of the gear';
COMMENT ON COLUMN GEAR_LK.DESCRIPTION IS 'Description of the gear';

COMMENT ON TABLE GEAR_LK IS 'Look up table for gear codes and description.';

REM   Create HATCHERY_ORIGIN_LK Table
CREATE TABLE HATCHERY_ORIGIN_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(15 BYTE)
,CONSTRAINT HATCHERY_ORIGIN_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN HATCHERY_ORIGIN_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN HATCHERY_ORIGIN_LK.DESCRIPTION IS 'Description of the Hatchery Origin';

COMMENT ON TABLE HATCHERY_ORIGIN_LK IS 'Look up table for the hatchery origin.';

REM   Create MACROHABITAT_LK Table
CREATE TABLE MACROHABITAT_LK (
ID		NUMBER
,CODE		VARCHAR2(30 BYTE)
,DESCRIPTION	VARCHAR2(100 BYTE)
,TYPE		VARCHAR2(30 BYTE)
,CONSTRAINT MACROHABITAT_PK PRIMARY KEY (ID)
,CONSTRAINT MACROHABITAT_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN MACROHABITAT_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN MACROHABITAT_LK.CODE IS 'Code of macro habitat';
COMMENT ON COLUMN MACROHABITAT_LK.DESCRIPTION IS 'Description of macro habitat';
COMMENT ON COLUMN MACROHABITAT_LK.TYPE IS 'The habitat type';

COMMENT ON TABLE MACROHABITAT_LK IS 'Look up table for the Macro Habitat details.';

REM   Create MARK_RECAPTURE_LK Table
CREATE TABLE MARK_RECAPTURE_LK (
ID	NUMBER
,CODE	VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(100 BYTE)
,CONSTRAINT MARK_RECAPTURE_PK PRIMARY KEY (ID)
,CONSTRAINT MARK_RECAPTURE_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN MARK_RECAPTURE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN MARK_RECAPTURE_LK.CODE IS 'Mark or Recapture Code';
COMMENT ON COLUMN MARK_RECAPTURE_LK.DESCRIPTION IS 'Description of the Mark or Recapture type';

COMMENT ON TABLE MARK_RECAPTURE_LK IS 'Look up table for the code and details for Mark or Recapture';

REM   Create MESOHABITAT_LK Table
CREATE TABLE MESOHABITAT_LK (
ID	NUMBER
,CODE	VARCHAR2(30 BYTE)
,DESCRIPTION	VARCHAR2(50 BYTE)
,CONSTRAINT MESOHABITAT_PK PRIMARY KEY (ID)
,CONSTRAINT MESOHABITAT_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN MESOHABITAT_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN MESOHABITAT_LK.CODE IS 'Code of the meso habitat';
COMMENT ON COLUMN MESOHABITAT_LK.DESCRIPTION IS 'Description of the meso habitat';

COMMENT ON TABLE MESOHABITAT_LK IS 'Look up table for the Meso Habitat details.';

REM   Create  Table
CREATE TABLE METHOD_LK (
ID	NUMBER
,DESCRIPTION	VARCHAR2(50 BYTE)
,CONSTRAINT METHOD_PK PRIMARY KEY (ID)
);
COMMENT ON COLUMN METHOD_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN METHOD_LK.DESCRIPTION IS 'Description of the capture method.';

COMMENT ON TABLE METHOD_LK IS 'Look up table for the capture method.';

REM   Create LOCATION_STATUS_LK Table
CREATE TABLE LOCATION_STATUS_LK (
ID	NUMBER
,CODE	VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(50 BYTE)
,STATUS		VARCHAR2(50 BYTE)
,CONSTRAINT LOCATION_STATUS_PK PRIMARY KEY (ID)
,CONSTRAINT LOCATION_STATUS_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN LOCATION_STATUS_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN LOCATION_STATUS_LK.CODE IS 'Location code';
COMMENT ON COLUMN LOCATION_STATUS_LK.DESCRIPTION IS 'Description of the location where the fish ended up';
COMMENT ON COLUMN LOCATION_STATUS_LK.STATUS IS 'Short description for status of the location';

COMMENT ON TABLE LOCATION_STATUS_LK IS 'Look up table for the location that the fish ended up.';

REM   Create PIT_RNZ_LK Table
CREATE TABLE PIT_RNZ_LK (
CODE	VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(50 BYTE)
,CONSTRAINT PIT_RNZ_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN PIT_RNZ_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN PIT_RNZ_LK.DESCRIPTION IS 'Description of the PIT code';

COMMENT ON TABLE PIT_RNZ_LK IS 'Look up table for PIT codes.';

REM   Create PROJECT_LK Table
CREATE TABLE PROJECT_LK (
CODE	NUMBER
,DESCRIPTION	VARCHAR2(255 BYTE)
,CONSTRAINT PROJECT_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN PROJECT_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN PROJECT_LK.DESCRIPTION IS 'Description of the project';

COMMENT ON TABLE PROJECT_LK IS 'Look up table for Project details.';

REM   Create PSPA_COLUMN_LK Table
CREATE TABLE PSPA_COLUMN_LK (
COLUMN_ID	NUMBER
,COLUMN_NAME	VARCHAR2(200 BYTE)
,PSPA_TABLE	NUMBER
,CONSTRAINT PSPA_COLUMN_PK PRIMARY KEY (COLUMN_ID)
);
COMMENT ON COLUMN PSPA_COLUMN_LK.COLUMN_ID IS 'Primary Key. The column ID of associated table';
COMMENT ON COLUMN PSPA_COLUMN_LK.COLUMN_NAME IS 'Name of the column of the associated table';
COMMENT ON COLUMN PSPA_COLUMN_LK.PSPA_TABLE IS 'ID of the table';

COMMENT ON TABLE PSPA_COLUMN_LK IS 'Table used for error and tracking changes that provides a mapping of the tables and columns.';

REM   Create PURPOSE_LK Table
CREATE TABLE PURPOSE_LK (
CODE	VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT PURPOSE_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN PURPOSE_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN PURPOSE_LK.DESCRIPTION IS 'Description of the purpose';
COMMENT ON COLUMN PURPOSE_LK.SORT_ORDER IS 'Sort order for values to be used in the application';
COMMENT ON COLUMN PURPOSE_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE PURPOSE_LK IS 'Look up table for list of purpose';

REM   Create REACH_LK Table
CREATE TABLE REACH_LK (
ID		NUMBER
,CODE		NUMBER
,DESCRIPTION	VARCHAR2(100 BYTE)
,SEGMENT_CODE	NUMBER
,UPPER_RIVER_MILE	NUMBER
,LOWER_RIVER_MILE	NUMBER
,CONSTRAINT REACH_PK PRIMARY KEY (ID)
,CONSTRAINT REACH_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN REACH_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN REACH_LK.CODE IS 'Code for the Reach';
COMMENT ON COLUMN REACH_LK.DESCRIPTION IS 'Description of the Reach';
COMMENT ON COLUMN REACH_LK.SEGMENT_CODE IS 'Segment Code associated with the Reach. FK to SEGMENT_LK.CODE';
COMMENT ON COLUMN REACH_LK.UPPER_RIVER_MILE IS 'Upper river mile number of the Reach';
COMMENT ON COLUMN REACH_LK.LOWER_RIVER_MILE IS 'Lower river mile number of the Reach';

COMMENT ON TABLE REACH_LK IS 'Look up table for Reach details.';

REM   Create RIVER_LK Table
CREATE TABLE RIVER_LK (
ID		NUMBER
,CODE		NUMBER
,DESCRIPTION	VARCHAR2(100 BYTE)
,ABBREVIATION	VARCHAR2(4 BYTE)
,CONSTRAINT RIVER_PK PRIMARY KEY (ID)
,CONSTRAINT RIVER_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN RIVER_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN RIVER_LK.CODE IS 'Code for the river';
COMMENT ON COLUMN RIVER_LK.DESCRIPTION IS 'Description of the river';
COMMENT ON COLUMN RIVER_LK.ABBREVIATION IS 'Abbreviation of the river. Not all rivers have one.';

COMMENT ON TABLE RIVER_LK IS 'Look up table for River details.';


REM   Create SAMPLE_METHOD_LK Table
CREATE TABLE SAMPLE_METHOD_LK (
ID		NUMBER
,CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT SAMPLE_METHOD_PK PRIMARY KEY (ID)
,CONSTRAINT SAMPLE_METHOD_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN SAMPLE_METHOD_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN SAMPLE_METHOD_LK.CODE IS 'Sample Method Code';
COMMENT ON COLUMN SAMPLE_METHOD_LK.DESCRIPTION IS 'Description of the Sample Method';

COMMENT ON TABLE SAMPLE_METHOD_LK IS 'Look up table for the sample method.';

REM   Create SAMPLE_UNIT_TYPE_LK Table
CREATE TABLE SAMPLE_UNIT_TYPE_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT SAMPLE_UNIT_TYPE_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SAMPLE_UNIT_TYPE_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SAMPLE_UNIT_TYPE_LK.DESCRIPTION IS 'Description of the Sample Unit Type';

COMMENT ON TABLE SAMPLE_UNIT_TYPE_LK IS 'Look up table for Sample Unit Type details.';

REM   Create SCUTE_LOCATION_LK Table
CREATE TABLE SCUTE_LOCATION_LK (
CODE	VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT SCUTE_LOCATION_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SCUTE_LOCATION_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SCUTE_LOCATION_LK.DESCRIPTION IS 'Description of the Scute Location';

COMMENT ON TABLE SCUTE_LOCATION_LK IS 'Look up table for Scute Location details.';

REM   Create SEARCH_TYPE_LK Table
CREATE TABLE SEARCH_TYPE_LK (
CODE		VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT SEARCH_TYPE_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SEARCH_TYPE_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SEARCH_TYPE_LK.DESCRIPTION IS 'Description of the Search Types';
COMMENT ON COLUMN SEARCH_TYPE_LK.SORT_ORDER IS 'Used by application to display items in order';
COMMENT ON COLUMN SEARCH_TYPE_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE SEARCH_TYPE_LK IS 'Look up table for the Search Type details.';


REM   Create SPAWN_LK Table
CREATE TABLE SPAWN_LK (
CODE		VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT SPAWN_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SPAWN_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SPAWN_LK.DESCRIPTION IS 'Description of the Spawn type';
COMMENT ON COLUMN SPAWN_LK.SORT_ORDER IS 'Sort order for values to be used in the application';
COMMENT ON COLUMN SPAWN_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE SPAWN_LK IS 'Look up table for Spawn details.';

REM   Create U_SEVEN_LK Table
CREATE TABLE U_SEVEN_LK (
CODE	VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(20 BYTE)
,CONSTRAINT U_SEVEN_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN U_SEVEN_LK.CODE IS 'Utility 7 code. PK';
COMMENT ON COLUMN U_SEVEN_LK.DESCRIPTION IS 'Description of utility 7';

COMMENT ON TABLE U_SEVEN_LK IS 'Look up table for Utility 7 values';

REM   Create YES_NO_LK Table
CREATE TABLE yes_no_lk (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(10 BYTE)
,SORT_ORDER	NUMBER
,CONSTRAINT YES_NO_LK_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN yes_no_lk.code IS 'Code Y/N/U - unknown. PK';
COMMENT ON COLUMN yes_no_lk.description IS 'Description of options.';
COMMENT ON COLUMN yes_no_lk.sort_order IS 'Sort order used for displaying options in application';

COMMENT ON TABLE yes_no_lk IS 'Look up table for Yes_No';

