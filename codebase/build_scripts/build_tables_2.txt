REM Association tables

REM    Create BEND_RIVER_MILE_LK Table
CREATE TABLE BEND_RIVER_MILE_LK (
ID			NUMBER	NOT NULL
,BEND_NUMBER			NUMBER	NOT NULL
,DESCRIPTION		VARCHAR2(100 BYTE)
,SEGMENT_CODE		NUMBER
,UPPER_RIVER_MILE	NUMBER
,LOWER_RIVER_MILE	NUMBER
,STATE			VARCHAR2(2 BYTE)
,CONSTRAINT BEND_RIVER_MILE_PK PRIMARY KEY (ID)
,CONSTRAINT BEND_NUMBER_U UNIQUE (BEND_NUMBER)
,CONSTRAINT BRM_SEGMENT_FK FOREIGN KEY (SEGMENT_CODE) REFERENCES SEGMENT_LK (CODE)
);

COMMENT ON COLUMN BEND_RIVER_MILE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.BEND_NUMBER IS 'Bend number';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.DESCRIPTION IS 'Description of the bend';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.SEGMENT_CODE IS 'Segment code. FK to SEGMENT_LK.CODE';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.UPPER_RIVER_MILE IS 'Upper river mile marker for the bend';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.LOWER_RIVER_MILE IS 'Lower river mile marker for the bend';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.STATE IS 'State abbreviation. Not currently used';

COMMENT ON TABLE BEND_RIVER_MILE_LK IS 'Bend data table that contains details of the bend and relationship to segment.';


REM    Create CHUTE_LK Table
CREATE TABLE CHUTE_LK (
ID		NUMBER 	NOT NULL
,CODE		NUMBER	NOT NULL
,DESCRIPTION	VARCHAR2(100 BYTE)
,SEGMENT_CODE	NUMBER
,UPPER_RIVER_MILE	NUMBER
,LOWER_RIVER_MILE	NUMBER
,CONSTRAINT CHUTE_PK PRIMARY KEY (ID)
,CONSTRAINT CHUTE_CODE_U UNIQUE (CODE)
,CONSTRAINT CHUTE_SEGMENT_FK FOREIGN KEY (SEGMENT_CODE) REFERENCES SEGMENT_LK (CODE)
);
COMMENT ON COLUMN CHUTE_LK.ID IS 'Primary Key';
COMMENT ON COLUMN CHUTE_LK.CODE IS 'Chute code';
COMMENT ON COLUMN CHUTE_LK.DESCRIPTION IS 'Description of the chute';
COMMENT ON COLUMN CHUTE_LK.SEGMENT_CODE IS 'Segment code. FK to SEGMENT_LK.CODE';
COMMENT ON COLUMN CHUTE_LK.UPPER_RIVER_MILE IS 'Upper river mile marker for the chute';
COMMENT ON COLUMN CHUTE_LK.LOWER_RIVER_MILE IS 'Upper river mile marker for the chute';

COMMENT ON TABLE CHUTE_LK IS 'Chute data table that contains details of the chute and relationship to segment.';

*************issues
REM    Create GEAR_LK Table
CREATE TABLE GEAR_LK (
ID		NUMBER
,DESCRIPTION	VARCHAR2(100 BYTE)
,CODE		VARCHAR2(30 BYTE)
,GEAR_TYPE_CODE	VARCHAR2(5 BYTE)
,OFFICE_PROPOSED	VARCHAR2(5 BYTE)
,CHANGE_FROM		VARCHAR2(30 BYTE)
,CHANGE_FROM_DATE	VARCHAR2(30 BYTE)
,DEVELOPED_DATE		VARCHAR2(30 BYTE)
,DEPLOYMENT_TYPE	VARCHAR2(5 BYTE)
,CONSTRAINT GEAR_PK PRIMARY KEY (ID)
,CONSTRAINT GEAR_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN GEAR_LK.ID IS 'Primary Key.ID';
COMMENT ON COLUMN GEAR_LK.DESCRIPTION IS 'Description of the gear';
COMMENT ON COLUMN GEAR_LK.GEAR_TYPE_CODE IS 'Code for the gear type. FK to GEAR_TYPE_LK.CODE';
COMMENT ON COLUMN GEAR_LK.OFFICE_PROPOSED IS 'Code of the office that proposed the gear';
COMMENT ON COLUMN GEAR_LK.CHANGE_FROM IS 'Historical data of what was used and when it was changed from wild to standard';
COMMENT ON COLUMN GEAR_LK.CHANGE_FROM_DATE IS 'Historical data of what was used and when it was changed from wild to standard';
COMMENT ON COLUMN GEAR_LK.DEVELOPED_DATE IS 'Historical date of development, stay as text';
COMMENT ON COLUMN GEAR_LK.DEPLOYMENT_TYPE IS 'The type of deployment of the gear. A - active and P - passive';

COMMENT ON TABLE GEAR_LK IS 'Look up table containing the gear details.';



REM    Create MACRO_MESO_LK Table
CREATE TABLE MACRO_MESO_LK (
ID	NUMBER
,MACROHABITAT_CODE	NUMBER
,MESOHABITAT_CODE	NUMBER
,CONSTRAINT MACRO_MESO_PK PRIMARY KEY (ID)
);
COMMENT ON COLUMN MACRO_MESO_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN MACRO_MESO_LK.MACROHABITAT_CODE IS 'Marcohabitat code. FK to MACROHABITAT_LK.CODE';
COMMENT ON COLUMN MACRO_MESO_LK.MESOHABITAT_CODE IS 'Mesohabitat code. FK to MESOHABITAT_LK.CODE';

COMMENT ON TABLE MACRO_MESO_LK IS 'Association table that links Maro and Meso habitats. This is used in the field application';



REM    Create FIELD_OFFICE_SEGMENT_LK Table
CREATE TABLE FIELD_OFFICE_SEGMENT_LK (
ID			NUMBER
,FIELD_OFFICE_CODE	VARCHAR2(5 BYTE)
,SEGMENT_CODE		NUMBER
,PROJECT_CODE		NUMBER
,CONSTRAINT FIELD_OFFICE_SEGMENT_PK PRIMARY KEY (ID)
,CONSTRAINT FOS_FIELD_OFFICE_CODE_FK FOREIGN KEY (FIELD_OFFICE_CODE) REFERENCES FIELD_OFFICE_LK (CODE)
,CONSTRAINT FOS_SEGMENT_CODE_FK FOREIGN KEY (SEGMENT_CODE) REFERENCES SEGMENT_LK (CODE)
,CONSTRAINT FOS_PROJECT_CODE_FK FOREIGN KEY (PROJECT_CODE) REFERENCES PROJECT_LK (CODE)
);
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.FIELD_OFFICE_CODE IS 'FK to FIELD_OFFICE_LK.CODE';
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.SEGMENT_CODE IS 'FK to SEGMENT_LK.CODE';
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.PROJECT_CODE IS 'FK to PROJECT_LK.CODE';

COMMENT ON TABLE FIELD_OFFICE_SEGMENT_LK IS 'Look up table that links the field office to a segment and project';




