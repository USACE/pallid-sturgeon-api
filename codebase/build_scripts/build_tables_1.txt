### Create BEND_RIVER_MILE_LK Table
CREATE TABLE BEND_RIVER_MILE_LK (
ID			NUMBER	NOT NULL
,NUMBER			NUMBER	NOT NULL
,DESCRIPTION		VARCHAR2(100 BYTE)
,SEGMENT_CODE		NUMBER
,UPPER_RIVER_MILE	NUMBER
,LOWER_RIVER_MILE	NUMBER
,STATE			VARCHAR2(2 BYTE)
,CONSTRAINT BEND_RIVER_MILE_PK PRIMARY KEY (ID)
,CONSTRAINT BEND_NUMBER_U UNIQUE (NUMBER)
,CONSTRAINT BRM_SEGMENT_FK FOREIGN KEY (SEGMENT_CODE) REFERENCES SEGMENT_LK (CODE)
);

COMMENT ON COLUMN BEND_RIVER_MILE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.NUMBER IS 'Bend number';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.DESCRIPTION IS 'Description of the bend';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.SEGMENT_CODE IS 'Segment code. FK to SEGMENT_LK.CODE';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.UPPER_RIVER_MILE IS 'Upper river mile marker for the bend';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.LOWER_RIVER_MILE IS 'Lower river mile marker for the bend';
COMMENT ON COLUMN BEND_RIVER_MILE_LK.STATE IS 'State abbreviation. Not currently used';

COMMENT ON TABLE BEND_RIVER_MILE_LK IS 'Bend data table that contains details of the bend and relationship to segment.';

### Create CHUTE_LK Table
CREATE TABLE CHUTE_LK (
ID		NUMBER 	NOT NULL
,CODE		NUMBER	NOT NULL
,DESCRIPTION	VARCHAR2(100 BYTE)
,SEGMENT_CODE	NUMBER
,UPPER_RIVER_MILE	NUMBER
,LOWER_RIVER_MILE	NUMBER
,CONSTRAINT CHUTE_PK PRIMARY KEY (ID)
,CONSTRAINT CHUTE_CODE_U UNIQUE (CODE)
,CONSTRAINT CHUTE_SEGMENT_FK FOREIGN KEY (SEGMENT_CODE) REFERENCES SEGMENT_LK (CODE)
);
COMMENT ON COLUMN CHUTE_LK.ID IS 'Primary Key';
COMMENT ON COLUMN CHUTE_LK.CODE IS 'Chute code';
COMMENT ON COLUMN CHUTE_LK.DESCRIPTION IS 'Description of the chute';
COMMENT ON COLUMN CHUTE_LK.SEGMENT_CODE IS 'Segment code. FK to SEGMENT_LK.CODE';
COMMENT ON COLUMN CHUTE_LK.UPPER_RIVER_MILE IS 'Upper river mile marker for the chute';
COMMENT ON COLUMN CHUTE_LK.LOWER_RIVER_MILE IS 'Upper river mile marker for the chute';

COMMENT ON TABLE CHUTE_LK IS 'Chute data table that contains details of the chute and relationship to segment.';

### Create COBBLE_ORGANIC_EST_LK Table
CREATE TABLE COBBLE_ORGANIC_EST_LK (
ID		NUMBER
,CODE		NUMBER
,DESCRIPTION	VARCHAR2(50 BYTE)
,CONSTRAINT COBBLE_ORGANIC_EST_PK PRIMARY KEY (ID)
,CONSTRAINT COBBLE_ORGANIC_EST_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN COBBLE_ORGANIC_EST_LK IS 'Primary Key';
COMMENT ON COLUMN COBBLE_ORGANIC_EST_LK IS 'Code of the estimate for cobble organic';
COMMENT ON COLUMN COBBLE_ORGANIC_EST_LK IS 'Description of the estimate';

COMMENT ON TABLE COBBLE_ORGANIC_EST_LK IS 'Contains the values for the cobble organic estimate values';

### Create ELASTOMER_COLORS_LK Table
CREATE TABLE ELASTOMER_COLORS_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,COLOR		VARCHAR2(30 BYTE)
,CONSTRAINT ELASTOMER_COLORS_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN ELASTOMER_COLORS_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN ELASTOMER_COLORS_LK.DESCRIPTION IS 'Color Description, contains code';
COMMENT ON COLUMN ELASTOMER_COLORS_LK.COLOR IS 'Color Description';

COMMENT ON TABLE ELASTOMER_COLORS_LK IS 'Look up table of Elastomer Colors, contains color code and description.';

### Create ELASTOMER_HVX_LK Table
CREATE TABLE ELASTOMER_HVX_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT ELASTOMER_HVX_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN ELASTOMER_HVX_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN ELASTOMER_HVX_LK.DESCRIPTION IS 'Description of the elastomer';

COMMENT ON TABLE ELASTOMER_HVX_LK IS 'Look up table of Elastomer HVX code and description.';

### Create EVAL_LOCATION_LK Table
CREATE TABLE EVAL_LOCATION_LK (
CODE		VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT EVAL_LOCATION_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN EVAL_LOCATION_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN EVAL_LOCATION_LK.DESCRIPTION IS 'Description of the evaluation location';
COMMENT ON COLUMN EVAL_LOCATION_LK.SORT_ORDER IS 'Order to display the selection options in the application';
COMMENT ON COLUMN EVAL_LOCATION_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE IS EVAL_LOCATION_LK IS 'Look up table for Evaluation Location details.';

### Create FD_BAIT_BOX_LK Table
CREATE TABLE FD_BAIT_BOX_LK (
ID		NUMBER
,CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(50 BYTE)
,CONSTRAINT FD_BAIT_BOX_PK PRIMARY KEY (ID)
,CONSTRAINT FD_BAIT_BOX_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN FD_BAIT_BOX_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FD_BAIT_BOX_LK.CODE IS 'Code for bait box type';
COMMENT ON COLUMN FD_BAIT_BOX_LK.DESCRIPTION IS 'Description of the bait box type';

COMMENT ON TABLE FD_BAIT_BOX_LK IS 'Look up table for Bait Box details.';

### Create FIELD_OFFICE_LK Table
CREATE TABLE FIELD_OFFICE_LK (
ID		NUMBER
,CODE		VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(255 BYTE)
,STATE		VARCHAR2(2 BYTE)
,CONSTRAINT FIELD_OFFICE_PK PRIMARY KEY (ID)
,CONSTRAINT FIELD_OFFICE_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN FIELD_OFFICE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FIELD_OFFICE_LK.CODE IS 'Field Office Code';
COMMENT ON COLUMN FIELD_OFFICE_LK.DESCRIPTION IS 'Description of the field office';
COMMENT ON COLUMN FIELD_OFFICE_LK.STATE IS 'State of the field office';

COMMENT ON TABLE FIELD_OFFICE_LK IS 'Look up table for Field Office and code.';

### Create FIELD_OFFICE_SEGMENT_LK Table
CREATE TABLE FIELD_OFFICE_SEGMENT_LK (
ID			NUMBER
,FIELD_OFFICE_CODE	VARCHAR2(5 BYTE)
,SEGMENT_CODE		NUMBER
,PROJECT_CODE		NUMBER
,CONSTRAINT FIELD_OFFICE_SEGMENT_PK PRIMARY KEY (ID)
,CONSTRAINT FOS_FIELD_OFFICE_CODE_FK FOREIGN KEY (FIELD_OFFICE_CODE) REFERENCES FIELD_OFFICE_LK (CODE)
,CONSTRAINT FOS_SEGMENT_CODE_FK FOREIGN KEY (SEGMENT_CODE) REFERENCES SEGMENT_LK (CODE)
,CONSTRAINT FOS_PROJECT_CODE_FK FOREIGN KEY (PROJECT_CODE) REFERENCES PROJECT_LK (CODE)
);
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.FIELD_OFFICE_CODE IS 'FK to FIELD_OFFICE_LK.CODE';
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.SEGMENT_CODE IS 'FK to SEGMENT_LK.CODE';
COMMENT ON COLUMN FIELD_OFFICE_SEGMENT_LK.PROJECT_CODE IS 'FK to PROJECT_LK.CODE';

COMMENT ON TABLE FIELD_OFFICE_SEGMENT_LK IS 'Look up table that links the field office to a segment and project';

### Create FISH_CODE_LK Table
CREATE TABLE FISH_CODE_LK (
ID			NUMBER
,COMMON_NAME		VARCHAR2(255 BYTE)
,SCIENTIFIC_NAME	VARCHAR2(255 BYTE)
,ALPHA_CODE		VARCHAR2(30 BYTE)
,NUMERIC_CODE		NUMBER
,NUMERIC_CODE_TXT	VARCHAR2(30 BYTE)
,CONSTRAINT FISH_CODE_PK PRIMARY KEY (ID)
,CONSTRAINT FISH_CODE_ALPHA_CODE_U UNIQUE (ALPHA_CODE)
,CONSTRAINT FISH_CODE_NUMERIC_CODE_U UNIQUE (NUMERIC_CODE)
);
COMMENT ON COLUMN FISH_CODE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FISH_CODE_LK.COMMON_NAME IS 'Common name of the fish';
COMMENT ON COLUMN FISH_CODE_LK.SCIENTIFIC_NAME IS 'Scientific name of the species of fish';
COMMENT ON COLUMN FISH_CODE_LK.ALPHA_CODE IS 'Alpha code of the fish';
COMMENT ON COLUMN FISH_CODE_LK.NUMERIC_CODE IS 'Numeric code of the fish stored as number';
COMMENT ON COLUMN FISH_CODE_LK.NUMBERIC_CODE_TXT IS 'Numeric code stored as a string';

COMMENT ON TABLE FISH_CODE_LK IS 'Look up table containing details about fish.';

### Create FISH_STRUCTURE_LK Table
CREATE TABLE FISH_STRUCTURE_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT FISH_STRUCTURE_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN FISH_STRUCTURE_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN FISH_STRUCTURE_LK.DESCRIPTION IS 'Description of the fish structure';

COMMENT ON TABLE FISH_STRUCTURE_LK IS 'Look up table for fish structure by code.';

### Create FLOY_TAG_PREFIX_CODE_LK Table
CREATE TABLE FLOY_TAG_PREFIX_CODE_LK (
ID		NUMBER
,CODE		VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT FLOY_TAG_PREFIX_CODE_PK PRIMARY KEY (ID)
,CONSTRAINT FLOY_TAG_PREFIX_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN FLOY_TAG_PREFIX_CODE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FLOY_TAG_PREFIX_CODE_LK.CODE IS 'Code of the floy tag prefix';
COMMENT ON COLUMN FLOY_TAG_PREFIX_CODE_LK.DESCRIPTION IS 'Description of the tag prefix';

COMMENT ON TABLE IS FLOY_TAG_PREFIX_CODE_LK 'Look up table for Floy tag prefix details.';

### Create FREQUENCY_LK Table
CREATE TABLE FREQUENCY_LK (
ID		NUMBER
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT FREQUENCY_LK_PK PRIMARY KEY (ID)
);
COMMENT ON COLUMN FREQUENCY_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN FREQUENCY_LK.DESCRIPTION IS 'Description of the frequency';
COMMENT ON COLUMN FREQUENCY_LK.SORT_ORDER IS 'Sort order used for application display';
COMMENT ON COLUMN FREQUENCY_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE FREQUENCY_LK IS 'Look up table for Frequency details of tracking tag on fish';
