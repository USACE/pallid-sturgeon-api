### Create SAMPLE_METHOD_LK Table
CREATE TABLE SAMPLE_METHOD_LK (
ID		NUMBER
,CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT SAMPLE_METHOD_PK PRIMARY KEY (ID)
,CONSTRAINT SAMPLE_METHOD_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN SAMPLE_METHOD_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN SAMPLE_METHOD_LK.CODE IS 'Sample Method Code';
COMMENT ON COLUMN SAMPLE_METHOD_LK.DESCRIPTION IS 'Description of the Sample Method';

COMMENT ON TABLE SAMPLE_METHOD_LK IS 'Look up table for the sample method.';

### Create SAMPLE_UNIT_TYPE_LK Table
CREATE TABLE SAMPLE_UNIT_TYPE_LK (
CODE		VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT SAMPLE_UNIT_TYPE_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SAMPLE_UNIT_TYPE_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SAMPLE_UNIT_TYPE_LK.DESCRIPTION IS 'Description of the Sample Unit Type';

COMMENT ON TABLE SAMPLE_UNIT_TYPE_LK IS 'Look up table for Sample Unit Type details.';

### Create SCUTE_LOCATION_LK Table
CREATE TABLE SCUTE_LOCATION_LK (
CODE	VARCHAR2(1 BYTE)
,DESCRIPTION	VARCHAR2(30 BYTE)
,CONSTRAINT SCUTE_LOCATION_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SCUTE_LOCATION_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SCUTE_LOCATION_LK.DESCRIPTION IS 'Description of the Scute Location';

COMMENT ON TABLE SCUTE_LOCATION_LK IS 'Look up table for Scute Location details.';

### Create SEARCH_TYPE_LK Table
CREATE TABLE SEARCH_TYPE_LK (
CODE		VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT SEARCH_TYPE_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SEARCH_TYPE_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SEARCH_TYPE_LK.DESCRIPTION IS 'Description of the Search Types';
COMMENT ON COLUMN SEARCH_TYPE_LK.SORT_ORDER IS 'Used by application to display items in order';
COMMENT ON COLUMN SEARCH_TYPE_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE SEARCH_TYPE_LK IS 'Look up table for the Search Type details.';

### Create SEASON_GEAR_OFFICE_LK Table
CREATE TABLE SEASON_GEAR_OFFICE_LK (
ID			NUMBER
,FIELD_OFFICE_CODE	VARCHAR2(5 BYTE)
,SEASON_CODE		VARCHAR2(5 BYTE)
,GEAR_CODE		VARCHAR2(30 BYTE)
,GEAR			VARCHAR2(100 BYTE)
,PROJECT_CODE		NUMBER
,CONSTRAINT SEASON_GEAR_OFFICE_PK PRIMARY KEY (ID)
);
COMMENT ON COLUMN SEASON_GEAR_OFFICE_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN SEASON_GEAR_OFFICE_LK.FIELD_OFFICE_CODE IS 'Field Office Code. FK to FIELD_OFFICE_LK.CODE';
COMMENT ON COLUMN SEASON_GEAR_OFFICE_LK.SEASON_CODE IS 'Season Code. FK to SEASON_LK.CODE';
COMMENT ON COLUMN SEASON_GEAR_OFFICE_LK.GEAR_CODE IS 'Gear Code. FK to GEAR_LK.CODE';
COMMENT ON COLUMN SEASON_GEAR_OFFICE_LK.GEAR IS 'Description of the gear. This needs to stay because of the way the current application works';
COMMENT ON COLUMN SEASON_GEAR_OFFICE_LK.PROJECT_CODE IS 'Project Code. FK to PROJECT_LK.CODE';

COMMENT ON TABLE SEASON_GEAR_OFFICE_LK IS 'Validation look up table for drop down selection of gear.';

### Create SEASON_LK Table
CREATE TABLE SEASON_LK (
ID		NUMBER
,CODE		VARCHAR2(5 BYTE)
,DESCRIPTION	VARCHAR2(50 BYTE)
,FIELD_APP_FLAG	NUMBER
,PROJECT_CODE	NUMBER
,CONSTRAINT SEASON_PK PRIMARY KEY (ID)
,CONSTRAINT SEASON_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN SEASON_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN SEASON_LK.CODE IS 'Code for the Season';
COMMENT ON COLUMN SEASON_LK.DESCRIPTION IS 'Description of the Season';
COMMENT ON COLUMN SEASON_LK.FIELD_APP_FLAG IS 'This is a flag for if the row will be included in the field app. 1 - yes, 0 - no';
COMMENT ON COLUMN SEASON_LK.PROJECT_CODE IS 'Code of the project. FK to PROJECT_LK.CODE';

COMMENT ON TABLE SEASON_LK IS 'Look up table for Season details.';

### Create SEGMENT_LK Table
CREATE TABLE SEGMENT_LK (
ID		NUMBER
,CODE		NUMBER
,DESCRIPTION	VARCHAR2(255 BYTE)
,TYPE		VARCHAR2(50 BYTE)
,RIVER_CODE	NUMBER
,UPPER_RIVER_MILE	NUMBER
,LOWER_RIVER_MILE	NUMBER
,RPMA		NUMBER
,CONSTRAINT SEGMENT_PK PRIMARY KEY (ID)
,CONSTRAINT SEGMENT_CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN SEGMENT_LK.ID IS 'Primary Key. ID';
COMMENT ON COLUMN SEGMENT_LK.CODE IS 'Segment Code';
COMMENT ON COLUMN SEGMENT_LK.DESCRIPTION IS 'Description of the Segment';
COMMENT ON COLUMN SEGMENT_LK.TYPE IS 'Type of the Segment';
COMMENT ON COLUMN SEGMENT_LK.RIVER_CODE IS 'Code of the River the segment is on. FK to RIVER_LK.CODE';
COMMENT ON COLUMN SEGMENT_LK.UPPER_RIVER_MILE IS 'Upper River Mile of the Segment';
COMMENT ON COLUMN SEGMENT_LK.LOWER_RIVER_MILE IS 'Lower River Mile of the Segment';
COMMENT ON COLUMN SEGMENT_LK.RPMA IS 'Recovery Program Management Area for data analysis';

COMMENT ON TABLE SEGMENT_LK IS 'Look up table for Segment details.';

### Create SPAWN_LK Table
CREATE TABLE SPAWN_LK (
CODE		VARCHAR2(2 BYTE)
,DESCRIPTION	VARCHAR2(199 BYTE)
,SORT_ORDER	NUMBER
,ACTIVE_FLAG	NUMBER
,CONSTRAINT SPAWN_PK PRIMARY KEY (CODE)
);
COMMENT ON COLUMN SPAWN_LK.CODE IS 'Primary Key. Code';
COMMENT ON COLUMN SPAWN_LK.DESCRIPTION IS 'Description of the Spawn type';
COMMENT ON COLUMN SPAWN_LK.SORT_ORDER IS 'Sort order for values to be used in the application';
COMMENT ON COLUMN SPAWN_LK.ACTIVE_FLAG IS 'Flag indicating if field is active. 1 - active - 0 - inactive';

COMMENT ON TABLE SPAWN_LK IS 'Look up table for Spawn details.';

### Create UPLOAD_FISH Table
CREATE TABLE UPLOAD_FISH (
F_FID		VARCHAR2(50 BYTE)
,F_ID		NUMBER(38,0)
,MR_FID		VARCHAR2(50 BYTE)
,MR_ID		NUMBER(38,0)
,PANELHOOK	VARCHAR2(5 BYTE)
,BAIT		VARCHAR2(1 BYTE)
,SPECIES_CODE	VARCHAR2(4 BYTE)
,LENGTH		NUMBER
,WEIGHT		NUMBER
,LAST_UPDATED	DATE
,SITE_ID	NUMBER(38,0)
,COMMENTS	VARCHAR2(200 BYTE)
,UPLOADED_BY	VARCHAR2(20 BYTE)
,UPLOAD_SESSION_ID	NUMBER
,FISH_COUNT	NUMBER
,OTOLITH	VARCHAR2(1 BYTE)
,RAYSPINE	VARCHAR2(1 BYTE)
,SCALE		VARCHAR2(1 BYTE)
,FT_PREFIX_CODE	VARCHAR2(3 BYTE)
,FT_NUMBER	NUMBER
,FT_MR_CODE	VARCHAR2(1 BYTE)
,UPLOAD_FILENAME	VARCHAR2(200 BYTE)
,COMPLETE	NUMBER
,CHECKBY	VARCHAR2(3 BYTE)
,FIN_CURL_YN	VARCHAR2(1 BYTE)
,CONSTRAINT UPLOAD_FISH_PK PRIMARY KEY (F_FID)
);
COMMENT ON COLUMN UPLOAD_FISH.F_FID IS 'Primary Key. ';
COMMENT ON COLUMN UPLOAD_FISH.F_ID IS '';
COMMENT ON COLUMN UPLOAD_FISH.MR_FID IS '';
COMMENT ON COLUMN UPLOAD_FISH.PANELHOOK IS 'Valid values a number or B, M';
COMMENT ON COLUMN UPLOAD_FISH.BAIT IS '';
COMMENT ON COLUMN UPLOAD_FISH.SPECIES_CODE IS '';
COMMENT ON COLUMN UPLOAD_FISH.LENGTH IS '';
COMMENT ON COLUMN UPLOAD_FISH.WEIGHT IS '';
COMMENT ON COLUMN UPLOAD_FISH.LAST_UPDATED IS '';
COMMENT ON COLUMN UPLOAD_FISH.MR_ID IS '';
COMMENT ON COLUMN UPLOAD_FISH.SITE_ID IS '';
COMMENT ON COLUMN UPLOAD_FISH.COMMENTS IS '';
COMMENT ON COLUMN UPLOAD_FISH.UPLOADED_BY IS '';
COMMENT ON COLUMN UPLOAD_FISH.UPLOAD_SESSION_ID IS '';
COMMENT ON COLUMN UPLOAD_FISH.FISH_COUNT IS '';
COMMENT ON COLUMN UPLOAD_FISH.OTOLITH IS '';
COMMENT ON COLUMN UPLOAD_FISH.RAYSPINE IS '';
COMMENT ON COLUMN UPLOAD_FISH.SCALE IS '';
COMMENT ON COLUMN UPLOAD_FISH.FT_PREFIX_CODE IS '';
COMMENT ON COLUMN UPLOAD_FISH.FT_NUMBER IS '';
COMMENT ON COLUMN UPLOAD_FISH.FT_MR_CODE IS '';
COMMENT ON COLUMN UPLOAD_FISH.UPLOAD_FILENAME IS '';
COMMENT ON COLUMN UPLOAD_FISH.COMPLETE IS '';
COMMENT ON COLUMN UPLOAD_FISH.CHECKBY IS '';
COMMENT ON COLUMN UPLOAD_FISH.FIN_CURL_YN IS '';

COMMENT ON TABLE UPLOAD_FISH IS '';

### Create  Table
CREATE TABLE  (

,CONSTRAINT _PK PRIMARY KEY (ID)
,CONSTRAINT _CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN . IS '';

COMMENT ON TABLE  IS '';

### Create  Table
CREATE TABLE  (

,CONSTRAINT _PK PRIMARY KEY (ID)
,CONSTRAINT _CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN . IS '';

COMMENT ON TABLE  IS '';

### Create  Table
CREATE TABLE  (

,CONSTRAINT _PK PRIMARY KEY (ID)
,CONSTRAINT _CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN . IS '';

COMMENT ON TABLE  IS '';

### Create  Table
CREATE TABLE  (

,CONSTRAINT _PK PRIMARY KEY (ID)
,CONSTRAINT _CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN . IS '';

COMMENT ON TABLE  IS '';

### Create  Table
CREATE TABLE  (

,CONSTRAINT _PK PRIMARY KEY (ID)
,CONSTRAINT _CODE_U UNIQUE (CODE)
);
COMMENT ON COLUMN . IS '';

COMMENT ON TABLE  IS '';
